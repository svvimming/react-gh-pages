{"version":3,"sources":["left.png","right.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","hexColors","GLOBS","text","chars","color","theta","Math","random","phi","alpha","calcOffset","i","offsetY","j","Plob","props","w","this","characters","h","orientation","left","x","top","y","width","height","transform","transformOrigin","className","style","src","lefty","alt","righty","React","Component","NplusOne","state","displayTextForm","value","handleChange","bind","event","setState","target","data","split","length","push","update","rows","cols","onChange","onFocus","clearPrompt","type","onClick","createPlob","Chain","map","glob","index","key","splice","join","sin","PI","addToChain","floor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kIAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gMCKrCC,EAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACzDC,EAAQ,CACZ,CACEC,KAAM,kqBACNC,MAAO,IACPC,MAAO,UACPC,MAAqB,GAAdC,KAAKC,SAAa,GACzBC,IAAmB,GAAdF,KAAKC,SAAa,GACvBE,MAAqB,GAAdH,KAAKC,SAAa,IAE3B,CACEL,KAAM,6IACNC,MAAO,IACPC,MAAO,UACPC,MAAqB,GAAdC,KAAKC,SAAa,GACzBC,IAAmB,GAAdF,KAAKC,SAAa,GACvBE,MAAqB,GAAdH,KAAKC,SAAa,IAE3B,CACEL,KAAM,ygBACNC,MAAO,IACPC,MAAO,UACPC,MAAqB,GAAdC,KAAKC,SAAa,GACzBC,IAAmB,GAAdF,KAAKC,SAAa,GACvBE,MAAqB,GAAdH,KAAKC,SAAa,KAK7B,SAASG,EAAWC,GAElB,IADA,IAAIC,EAAQ,EACHC,EAAE,EAAGA,EAAEF,EAAGE,IACjBD,GAA0B,GAAfX,EAAMY,GAAGV,MAEtB,OAAOS,E,IAGHE,E,+KACGC,GACL,IAAIC,EAA2B,IAAtBC,KAAKF,MAAMG,WAAiB,KACjCC,EAA2B,IAAtBF,KAAKF,MAAMG,WAAiB,KAC/BE,EAAc,CAClBC,KAAMJ,KAAKF,MAAMO,EACjBC,IAAKN,KAAKF,MAAMS,EAChBC,MAAO,IACPC,OAA8B,GAAtBT,KAAKF,MAAMG,WACnBd,MAAOa,KAAKF,MAAMX,MAClBuB,UAAW,WAAWV,KAAKF,MAAMV,MAAM,gBAAgBY,KAAKF,MAAMP,IAAI,gBAAgBS,KAAKF,MAAMN,MAAM,OACvGmB,gBAAiB,iBAEnB,OACE,yBAAKC,UAAU,aAAaC,MAAOV,GACnC,yBAAKS,UAAU,YAAYE,IAAKC,IAAOC,IAAI,MAAMR,MAAOT,EAAGU,OAAQP,IACnE,yBAAKU,UAAU,aAAaE,IAAKG,IAAQD,IAAI,MAAMR,MAAOT,EAAGU,OAAQP,IACrE,uBAAGU,UAAU,YAAYZ,KAAKF,MAAMb,W,GAjBvBiC,IAAMC,WAuBnBC,E,YACJ,WAAYtB,GAAQ,IAAD,8BACjB,4CAAMA,KACDuB,MAAQ,CACTC,iBAAiB,EACjBC,MAAO,iBAEX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,0EASNC,GACX1B,KAAK2B,SAAS,CACZJ,MAAOG,EAAME,OAAOL,U,kCAGZG,GACV1B,KAAK2B,SAAS,CACZL,gBAAiBtB,KAAKqB,MAAMC,gBAC5BC,MAAO,O,wCAITvB,KAAK2B,SAAS,CACZL,iBAAkBtB,KAAKqB,MAAMC,gBAC7BC,MAAOvB,KAAKqB,MAAME,U,mCAKpB,IAAIM,EAAO,CACT5C,KAAMe,KAAKqB,MAAME,MACjBrC,MAAOc,KAAKqB,MAAME,MAAMO,MAAM,IAAIC,OAClC5C,MAAOa,KAAKF,MAAMX,MAClBC,MAAOY,KAAKF,MAAMV,MAClBG,IAAKS,KAAKF,MAAMP,IAChBC,MAAOQ,KAAKF,MAAMN,OAEpBR,EAAMgD,KAAKH,GACX7B,KAAKF,MAAMmC,SAEXjC,KAAK2B,SAAS,CACZL,iBAAkBtB,KAAKqB,MAAMC,gBAC7BC,MAAO,oB,+BAID,IAAD,OACDpB,EAAc,CAClBC,KAAMJ,KAAKF,MAAMO,EACjBC,IAAKN,KAAKF,MAAMS,EAChBG,UAAW,WAAWV,KAAKF,MAAMV,MAAM,gBAAgBY,KAAKF,MAAMP,IAAI,gBAAgBS,KAAKF,MAAMN,MAAM,OACvGmB,gBAAiB,iBAEnB,OAAGX,KAAKqB,MAAMC,gBAEV,yBAAKV,UAAU,SAASC,MAAOV,GAC7B,8BAEE,8BACAS,UAAU,YACVsB,KAAK,KACLC,KAAK,KACLtB,MAAO,CAAC1B,MAAOa,KAAKF,MAAMX,OAC1BoC,MAAOvB,KAAKqB,MAAME,MAClBa,SAAUpC,KAAKwB,aACfa,QAAS,kBAAM,EAAKC,kBAGtB,4BACA1B,UAAU,OACV2B,KAAK,SACLC,QAAS,kBAAM,EAAKC,eAHpB,QASF,4BACA7B,UAAU,SACVC,MAAOV,EACPqC,QAAS,kBAAM,EAAKlB,oBAHpB,W,GA7EeJ,IAAMC,WA4IduB,E,YAlDb,WAAY5C,GAAO,IAAD,8BAChB,4CAAMA,KACDuB,MAAQ,CACXU,QAAQ,GAHM,E,0EAOhB/B,KAAK2B,SAAS,CACZI,QAAQ,M,+BAKV,OACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,SACZ5B,EAAM2D,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,EAAD,CACAC,IAAKF,EAAK3D,KAAK6C,MAAM,KAAKiB,OAAO,EAAG,GAAGC,KAAK,IAAIH,EAChDxC,EAAG,IAAI,IAAIhB,KAAK4D,IAAIJ,EAAMxD,KAAK6D,GAAG,IAClC3C,EAAGd,EAAWoD,GACd1D,MAAOyD,EAAKzD,MACZC,MAAOwD,EAAKxD,MACZG,IAAKqD,EAAKrD,IACVC,MAAOoD,EAAKpD,MACZP,KAAM2D,EAAK3D,KACXgB,WAAY2C,EAAK1D,WAEnB,kBAAC,EAAD,CACAmB,EAAG,IAAI,IAAIhB,KAAK4D,IAAIjE,EAAM+C,OAAO1C,KAAK6D,GAAG,IACzC3C,EAAGd,EAAWT,EAAM+C,OAAQ,GAAiC,GAA5B/C,EAAMA,EAAM+C,OAAO,GAAG7C,MACvDE,MAAqB,GAAdC,KAAKC,SAAa,GACzBC,IAAmB,GAAdF,KAAKC,SAAa,GACvBE,MAAqB,GAAdH,KAAKC,SAAa,GACzB2C,OAAQjC,KAAKmD,WAAW1B,KAAKzB,MAC7Bb,MAAOJ,EAAUM,KAAK+D,MAAM/D,KAAKC,SAASP,EAAUgD,iB,GApC1Cb,IAAMC,WC9INkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,SD6H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1b5b9a1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left.2af9a008.png\";","module.exports = __webpack_public_path__ + \"static/media/right.7c5ea010.png\";","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport lefty from './left.png'\nimport righty from './right.png'\nimport './index.css';\nconst hexColors = ['#ffa99e', '#ffad42', '#35b099', '#66043a', '#1f8758'];\nconst GLOBS = [\n  {\n    text: \"It is impossible to recognize an event, because an event is essentially distinct from every other event. the making of the difference is going to include the you that you’re becoming in the making of a difference. it’s you in relation the couch is a couch because it functions in a very particular way in relation to your movement “Recognition is an awareness of sameness. But to call recognition an awareness of sameness implies an intellectual act of comparison accompanied with judgment.” the recognition can’t be without judgement by judgement he means the making of a difference, not in the external sense think recognition as an ideal limit\",\n    chars: 646,\n    color: '#ffa99e',\n    theta: Math.random()*90 -45,\n    phi: Math.random()*90 -45,\n    alpha: Math.random()*90 -45\n  },\n  {\n    text: \"whitehead: what motors existence is feeling. Feeling is a kind of affective tonality that orients the world. World is oriented by quality.\",\n    chars: 138,\n    color: '#ffad42',\n    theta: Math.random()*90 -45,\n    phi: Math.random()*90 -45,\n    alpha: Math.random()*90 -45\n  },\n  {\n    text: \"In fact the character of an event is nothing but the objects which are ingredient in it and the ways in which those objects make their ingression into the event. as we unearth this concept of the object (which will not be what we think it is, it will go way beyond a couch) we’re going to recognize that the world is this, the things we call object - things that do not pass, that carry a certain consistency make all the difference concern is what makes a difference in the event” (whitehead says elsewhere)\",\n    chars: 508,\n    color: '#35b099',\n    theta: Math.random()*90 -45,\n    phi: Math.random()*90 -45,\n    alpha: Math.random()*90 -45\n  }\n];\n\n\nfunction calcOffset(i) {\n  var offsetY=0;\n  for (let j=0; j<i; j++){\n    offsetY += GLOBS[j].chars*0.5;\n  }\n  return offsetY;\n}\n\nclass Plob extends React.Component {\n  render(props) {\n    var w = (this.props.characters*0.32)+'px';\n    var h = (this.props.characters*0.66)+'px';\n    const orientation = {\n      left: this.props.x,\n      top: this.props.y,\n      width: 300,\n      height: this.props.characters*0.5,\n      color: this.props.color,\n      transform: 'rotateX('+this.props.theta+'deg) rotateY('+this.props.phi+'deg) rotateZ('+this.props.alpha+'deg)',\n      transformOrigin: 'center center'\n    }\n    return (\n      <div className=\"roundfloat\" style={orientation}>\n      <img className=\"floatLeft\" src={lefty} alt='ops' width={w} height={h}/>\n      <img className=\"floatRight\" src={righty} alt='ops' width={w} height={h}/>\n      <p className=\"plobtext\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass NplusOne extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        displayTextForm: false,\n        value: 'write here...'\n      };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n  clearPrompt(event) {\n    this.setState({\n      displayTextForm: this.state.displayTextForm,\n      value: ''\n    });\n  }\n  displayTextForm() {\n    this.setState({\n      displayTextForm: !this.state.displayTextForm,\n      value: this.state.value\n    });\n  }\n\n  createPlob() {\n    var data = {\n      text: this.state.value,\n      chars: this.state.value.split('').length,\n      color: this.props.color,\n      theta: this.props.theta,\n      phi: this.props.phi,\n      alpha: this.props.alpha\n    }\n    GLOBS.push(data);\n    this.props.update();\n\n    this.setState({\n      displayTextForm: !this.state.displayTextForm,\n      value: 'write here...'\n    });\n  }\n\n  render() {\n    const orientation = {\n      left: this.props.x,\n      top: this.props.y,\n      transform: 'rotateX('+this.props.theta+'deg) rotateY('+this.props.phi+'deg) rotateZ('+this.props.alpha+'deg)',\n      transformOrigin: 'center center'\n    };\n    if(this.state.displayTextForm){\n      return(\n        <div className=\"nplus1\" style={orientation}>\n          <form>\n\n            <textarea\n            className=\"textfield\"\n            rows=\"10\"\n            cols=\"34\"\n            style={{color: this.props.color}}\n            value={this.state.value}\n            onChange={this.handleChange}\n            onFocus={() => this.clearPrompt()}/>\n\n          </form>\n          <button\n          className=\"okie\"\n          type=\"button\"\n          onClick={() => this.createPlob()}>ok!\n          </button>\n        </div>\n      )\n    } else {\n      return(\n        <button\n        className=\"nplus1\"\n        style={orientation}\n        onClick={() => this.displayTextForm()}\n        >\n          n+1\n        </button>\n      )\n    }\n  }\n}\n\nclass Chain extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      length: true\n    }\n  }\n  addToChain() {\n    this.setState({\n      length: true,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"chain\">\n          {GLOBS.map((glob, index) => (\n            <Plob\n            key={glob.text.split(' ').splice(0, 3).join('')+index}\n            x={100+200*Math.sin(index*Math.PI/12)}\n            y={calcOffset(index)}\n            color={glob.color}\n            theta={glob.theta}\n            phi={glob.phi}\n            alpha={glob.alpha}\n            text={glob.text}\n            characters={glob.chars}/>\n          ))}\n          <NplusOne\n          x={100+200*Math.sin(GLOBS.length*Math.PI/12)}\n          y={calcOffset(GLOBS.length -1) + GLOBS[GLOBS.length-1].chars*0.5}\n          theta={Math.random()*90 -45}\n          phi={Math.random()*90 -45}\n          alpha={Math.random()*90 -45}\n          update={this.addToChain.bind(this)}\n          color={hexColors[Math.floor(Math.random()*hexColors.length)]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// ========================================\n\n// ReactDOM.render(\n//   <Chain />,\n//   document.getElementById('root')\n// );\nexport default Chain;\n\n\n\n\n// <div className=\"roundfloat\" style={orientation}>\n// <img className=\"floatLeft\" src={require(\"./left.png\")} alt='ops' width={w} height={h}/>\n// <img className=\"floatRight\" src={require(\"./right.png\")} alt='ops' width={w} height={h}/>\n// <p className=\"plobtext\">{this.props.text}</p>\n// </div>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chain from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Chain />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}